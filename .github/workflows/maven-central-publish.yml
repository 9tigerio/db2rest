# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Default Publish

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'liberica'
        server-id: central # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Build with Maven
      run: ./mvnw -B package --file pom.xml -DskipTests

    - name: Publish package
      run: ./mvnw -P release --batch-mode deploy -DskipTests
      env:
        MAVEN_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSWORD }}

    - name: Publish package Oracle9i
      run: ./mvnw -P release --batch-mode deploy --file api-rest/pom-oracle9i.xml -DskipTests
      env:
        MAVEN_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSWORD }}
